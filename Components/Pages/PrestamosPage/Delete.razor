@page "/Prestamos/Delete/{PrestamoId:int}"
@rendermode InteractiveServer
@inject PrestamoService prestamoService
@inject NavigationManager navigation


<PageTitle>Eliminar prestamo</PageTitle>
<div class="container">
    <div class="card shadow-lg">

        <div class="card-header  text-center">
            <h5 class="card-title"><strong>Eliminar prestamo</strong></h5>
        </div> <br />
        <div class="card-body ms-3">
            <h6 class="card-title"><strong>¿Seguro de que deseas eliminar el prestamo?</strong></h6>
            @*ID*@
            <div><strong>Prestamo ID:</strong> @Prestamo.PrestamoId</div>
            @*DeudorNombre*@
            <div><strong>Deudor: </strong>@Prestamo.Deudor.Nombres</div>
            @*Deudor Id*@
            <div><strong>Deudor ID:</strong> @Prestamo.DeudorId</div>
            @*Concepto*@
            <div><strong>Concepto:</strong> @Prestamo.Concepto </div>
            @*Monto*@
            <div><strong>Monto:</strong> @($"{Prestamo.Monto:C}") </div>
        </div>

        <div class="card-footer">
            <a href="/Prestamos/Index"
               class="btn btn-outline-secondary">
                <span class="bi bi-arrow-left mt-3"></span> Volver
            </a>
            <button @onclick="Eliminar" class="btn btn-outline-danger bi bi-trash" type="submit"> Eliminar</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int PrestamoId { get; set; }
    public Prestamos Prestamo { get; set; } = new Prestamos();

    protected override async Task OnInitializedAsync()
    {
        if (PrestamoId > 0)
        {
            Prestamo = await prestamoService.Buscar(PrestamoId);
        }
    }

    public async Task Eliminar()
    {
        var eliminar = await prestamoService.Eliminar(PrestamoId);
        if (eliminar)
        {
            navigation.NavigateTo("/Prestamos/Index");
        }
    }
}
